{"version":3,"sources":["components/HomePage/HomePage.tsx","api/api.ts","components/PersonName/PersonName.tsx","components/PersonRow/PersonRow.tsx","components/SortByCellButton/SortByCellButton.tsx","components/PeopleTable/PeopleTable.tsx","components/FilterField/FilterField.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["HomePage","api","getPeople","a","response","fetch","then","reply","json","PersonName","name","slug","color","sex","search","useLocation","to","style","PersonRow","born","died","mother","father","motherName","fatherName","SortByCellButton","value","pathname","parsed","queryString","parse","sortBy","sortOrder","stringified","stringify","link","replace","match","toUpperCase","src","alt","PeopleTable","people","activePerson","map","person","key","className","FilterField","useState","fieldValue","setFieldValue","push","useHistory","planQueryUpdate","useCallback","debounce","query","type","onChange","event","target","PeoplePage","setPeople","peopleToShow","setPeopleToShow","isLoading","setLoading","useEffect","data","find","human","sort","b","localeCompare","filter","pattern","RegExp","toString","test","loaded","NotFoundPage","Header","exact","activeClassName","App","path","component","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc7a0a80.chunk.js","sourcesContent":["import React, { FC } from 'react';\n\nexport const HomePage: FC = () => (\n  <h2>Home page</h2>\n);\n","interface Api {\n  getPeople<T>(): Promise<T>;\n}\n\nexport const api: Api = {\n  getPeople: async <T>(): Promise<T> => {\n    const response = fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n      .then(reply => reply.json());\n\n    return response;\n  },\n};\n","import React, { FC } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\n\ntype Props = {\n  name: string;\n  slug: string | undefined;\n  sex: string;\n};\n\nexport const PersonName: FC<Props> = ({ name, slug, sex }) => {\n  const color = sex === 'f' ? 'red' : '';\n  const { search } = useLocation();\n\n  return (\n    <div>\n      {\n        slug\n          ? (\n            <NavLink to={`/people/${slug}/${search}`} style={{ color }}>\n              {name}\n            </NavLink>\n          )\n          : <strong>{name}</strong>\n      }\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Person } from '../../interfaces/Person';\nimport { PersonName } from '../PersonName';\n\ntype Props = Person;\n\nexport const PersonRow: FC<Props> = ({\n  name,\n  sex,\n  born,\n  died,\n  mother,\n  father,\n  motherName,\n  fatherName,\n  slug,\n}) => (\n  <>\n    <td>\n      <PersonName\n        name={name}\n        slug={slug}\n        sex={sex}\n      />\n    </td>\n    <td>{sex}</td>\n    <td>{born}</td>\n    <td>{died}</td>\n    <td>\n      <PersonName\n        name={motherName}\n        slug={mother?.slug}\n        sex=\"f\"\n      />\n    </td>\n    <td>\n      <PersonName\n        name={fatherName}\n        slug={father?.slug}\n        sex=\"m\"\n      />\n    </td>\n  </>\n);\n","import React, { FC } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport queryString from 'query-string';\n\ntype Props = {\n  value: string;\n};\n\nexport const SortByCellButton: FC<Props> = ({ value }) => {\n  const { search, pathname } = useLocation();\n  const parsed = queryString.parse(search);\n\n  parsed.sortBy = value;\n  parsed.sortOrder = parsed.sortOrder === 'ask' ? 'desc' : 'ask';\n\n  const stringified = queryString.stringify(parsed);\n\n  const link = `${pathname}?${stringified}`;\n\n  return (\n    <NavLink to={link} style={{ color: '#000' }}>\n      {value.replace(/^\\w/, match => match.toUpperCase())}\n      <img src=\"sort_both.png\" alt=\"Sort both\" />\n    </NavLink>\n  );\n};\n","import React, { FC } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Person } from '../../interfaces/Person';\nimport { PersonRow } from '../PersonRow';\nimport { SortByCellButton } from '../SortByCellButton';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const { pathname } = useLocation();\n\n  const match = pathname.replace(/\\/+$/, '').match(/\\/([^/]+)$/g);\n  const activePerson = match ? match[0].replace('/', '') : null;\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>\n            <SortByCellButton value=\"name\" />\n          </th>\n          <th>\n            <SortByCellButton value=\"sex\" />\n          </th>\n          <th>\n            <SortByCellButton value=\"born\" />\n          </th>\n          <th>\n            <SortByCellButton value=\"died\" />\n          </th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          people.map(person => (\n            <tr\n              key={person.slug}\n              className={`${activePerson === person.slug ? 'highlighted' : ''}`}\n            >\n              <PersonRow {...person} />\n            </tr>\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n","import React, { FC, useState, useCallback } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { debounce } from 'lodash';\n\nexport const FilterField: FC = () => {\n  const [fieldValue, setFieldValue] = useState('');\n  const { search, pathname } = useLocation();\n  const { push } = useHistory();\n\n  const parsed = queryString.parse(search);\n\n  const setQueryString = (value: string) => {\n    parsed.query = value;\n    const stringified = queryString.stringify(parsed);\n\n    push(`${pathname}?${stringified}`);\n  };\n\n  const planQueryUpdate = useCallback(debounce(setQueryString, 500), []);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setFieldValue(value);\n    planQueryUpdate(value);\n  };\n\n  return (\n    <input\n      type=\"text\"\n      onChange={handleChange}\n      value={fieldValue}\n    />\n  );\n};\n","import React, { FC, useEffect, useState } from 'react';\nimport ReactLoader from 'react-loader';\nimport { useLocation } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { api } from '../../api/api';\nimport { Person, PersonOriginal } from '../../interfaces/Person';\nimport { PeopleTable } from '../PeopleTable';\nimport { FilterField } from '../FilterField';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [peopleToShow, setPeopleToShow] = useState<Person[]>([]);\n  const [isLoading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    api.getPeople<PersonOriginal[]>().then((data: PersonOriginal[]) => {\n      setPeople(data.map(person => ({\n        ...person,\n        mother: data.find(human => human.name === person.motherName) || null,\n        father: data.find(human => human.name === person.fatherName) || null,\n      })));\n    });\n  }, []);\n\n  const { search } = useLocation();\n  const { sortBy, query, sortOrder } = queryString.parse(search);\n\n  useEffect(() => {\n    if (sortBy === 'name' || sortBy === 'sex') {\n      people.sort((a, b) => (\n        sortOrder === 'desc'\n          ? a[sortBy].localeCompare(b[sortBy])\n          : b[sortBy].localeCompare(a[sortBy])\n      ));\n    } else if (sortBy === 'born' || sortBy === 'died') {\n      people.sort((a, b) => (\n        sortOrder === 'desc'\n          ? a[sortBy] - b[sortBy]\n          : b[sortBy] - a[sortBy]\n      ));\n    }\n\n    setPeopleToShow([...people].filter((person) => {\n      const pattern = new RegExp(query ? query.toString() : '', 'gi');\n\n      return pattern.test(person.name)\n        || pattern.test(person.motherName) || pattern.test(person.fatherName);\n    }));\n  }, [sortBy, sortOrder, query, people]);\n\n  return (\n    <>\n      <h2>People page</h2>\n      <ReactLoader loaded={isLoading}>\n        <FilterField />\n        <PeopleTable people={peopleToShow} />\n      </ReactLoader>\n    </>\n  );\n};\n","import React, { FC } from 'react';\n\nexport const NotFoundPage: FC = () => (\n  <h2>Page not found.</h2>\n);\n","import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header: FC = () => (\n  <ul className=\"menu\">\n    <li><NavLink to=\"/\" exact activeClassName=\"active-link\">Home</NavLink></li>\n    <li><NavLink to=\"/people\" activeClassName=\"active-link\">People</NavLink></li>\n  </ul>\n);\n","import React from 'react';\n\nimport './App.css';\nimport {\n  HashRouter,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { Header } from './components/Header';\n\nconst App = () => (\n  <div className=\"App grid-container\">\n    <HashRouter>\n      <Header />\n      <Switch>\n        <Route path=\"/people/\" component={PeoplePage} />\n        <Redirect from=\"/home\" to=\"/\" />\n        <Route path=\"/\" component={HomePage} />\n        <Route path=\"*\" component={NotFoundPage} />\n      </Switch>\n\n    </HashRouter>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'foundation-sites/dist/css/foundation.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}